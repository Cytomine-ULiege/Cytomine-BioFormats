plugins {
    id 'groovy'
    id 'application'
    id 'java'
}

group 'be.cytomine.bioformats'
version '3.1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://artifacts.openmicroscopy.org/artifactory/maven/'
    }
}

def bioformatsVersion = '6.9.0'
dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.10'
    compile("ome:formats-gpl:${bioformatsVersion}") {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    compile("ome:bio-formats-tools:${bioformatsVersion}") {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    compile('org.apache.logging.log4j:log4j-slf4j-impl:2.17.1')
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}


task makeBioFormatsResource(type: WriteProperties) {
    outputFile = file("src/main/resources/bioformats.properties")
    property("Bioformats-Version", bioformatsVersion)
}

compileJava {
    dependsOn tasks.makeBioFormatsResource
}

run {
    mainClassName = 'be.cytomine.bioformats.BioFormatServerSocket'
}

jar {
    manifest {
        attributes('Main-Class': 'be.cytomine.bioformats.BioFormatServerSocket')
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
